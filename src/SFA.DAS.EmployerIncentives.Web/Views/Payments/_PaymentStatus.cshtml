@using System.Globalization
@model SFA.DAS.EmployerIncentives.Web.Models.PaymentStatusModel

@{
    var culture = new CultureInfo("en-GB");
}

@if (Model != null)
{
    @if (!Model.LearnerMatchFound && !Model.PausePayments)
    {
        <p class="govuk-body govuk-!-margin-bottom-0">Training provider needs to confirm they have started their apprenticeship</p>
    }
    @if (Model.LearnerMatchFound && Model.HasDataLock)
    {
        <strong class="govuk-tag govuk-tag--red govuk-!-margin-bottom-3">Payment issue</strong>
        <p class="govuk-body govuk-!-margin-bottom-0">Contact your training provider to check that your information matches</p>
    }
    @if (Model.LearnerMatchFound && !Model.InLearning)
    {
        <p class="govuk-body govuk-!-margin-bottom-0">Apprenticeship paused or stopped</p>
    }
    @if (Model.PausePayments)
    {
        <p class="govuk-body govuk-!-margin-bottom-0">Application paused</p>
    }
    @if (Model.PaymentSent || Model.PaymentSentIsEstimated && Model.LearnerMatchFound && !Model.PausePayments && Model.InLearning)
    {
        <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-bottom-0">@(Model.PaymentSentIsEstimated ? "Estimated" : "Payment sent")</p>
        <p class="govuk-body govuk-!-margin-bottom-0">@(Model.PaymentDate.HasValue ? Model.PaymentDate.Value.ToString("d MMMM yyyy", culture) : "")</p>
        <p class="govuk-body das-!-color-dark-grey govuk-!-margin-bottom-0">@(Model.PaymentAmount.HasValue ? Model.PaymentAmount.Value.ToString("C0", culture) : "")</p>
    }
}