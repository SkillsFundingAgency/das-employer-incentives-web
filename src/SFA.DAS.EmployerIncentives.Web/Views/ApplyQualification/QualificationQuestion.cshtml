@model SFA.DAS.EmployerIncentives.Web.ViewModels.Apply.QualificationQuestionViewModel
@{
    ViewData["Title"] = Model.Title;
    ViewBag.GaData.Vpv = "/apply/eligible-apprentices";
    ViewData["ZenDeskLabels"] = "ei-eligibleapprentices";
}

<a asp-action="Start" asp-controller="Home" class="govuk-back-link">Back</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form asp-action="QualificationQuestion" method="post">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.OrganisationName)
                <partial name="ValidationSummary" />

                <div class="govuk-form-group @(ViewData.ModelState.IsValid ? "" : "govuk-form-group--error")">
                    <fieldset class="govuk-fieldset" aria-describedby="HasTakenOnNewApprentices-hint HasTakenOnNewApprentices-hint-2">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                            <h1 class="govuk-fieldset__heading">
                                @Model.Title
                            </h1>
                        </legend>
                        <span id="HasTakenOnNewApprentices-hint" class="govuk-hint">
                            @Model.OrganisationName cannot apply for an existing employee who joined their organisation before <span class="das-no-wrap">1 August 2020</span>, even if they started an apprenticeship after this date.
                        </span>
                        <span id="HasTakenOnNewApprentices-hint-2" class="govuk-hint">
                            @Model.OrganisationName can only apply for new apprentices who joined their organisation from <span class="das-no-wrap">1 August 2020</span> to <span class="das-no-wrap">31 March 2021</span>.
                        </span>

                        @if (ViewData.ModelState.ContainsKey(nameof(Model.HasTakenOnNewApprentices)) && ViewData.ModelState[nameof(Model.HasTakenOnNewApprentices)].Errors.Any())
                        {
                            <span class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span> @ViewData.ModelState[nameof(Model.HasTakenOnNewApprentices)].Errors.First().ErrorMessage
                            </span>
                        }

                        <div class="govuk-radios govuk-radios--inline">
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" asp-for="HasTakenOnNewApprentices" id="HasTakenOnNewApprentices" type="radio" value="true" />
                                <label class="govuk-label govuk-radios__label" for="HasTakenOnNewApprentices">
                                    Yes
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" asp-for="HasTakenOnNewApprentices" id="HasTakenOnNewApprentices-2" type="radio" value="false" />
                                <label class="govuk-label govuk-radios__label" for="HasTakenOnNewApprentices-2">
                                    No
                                </label>
                            </div>
                        </div>
                    </fieldset>
                </div>

                <button type="submit" class="govuk-button" data-module="govuk-button" data-prevent-double-click="true">
                    Continue
                </button>
            </form>
        </div>
    </div>
</main>