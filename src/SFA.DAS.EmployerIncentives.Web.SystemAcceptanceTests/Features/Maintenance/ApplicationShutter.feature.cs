// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.3.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.EmployerIncentives.Web.SystemAcceptanceTests.Features.Maintenance
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ApplicationShutter")]
    [NUnit.Framework.CategoryAttribute("employerIncentivesApi")]
    public partial class ApplicationShutterFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "employerIncentivesApi"};
        
#line 1 "ApplicationShutter.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ApplicationShutter", "\tAs an employer applying for an apprenticeship payment after the phase 2 period h" +
                    "as closed\r\n\tI want to be prevented from applying for the application\r\n\tSo that I" +
                    " can get the correct apprenticeship grant", ProgrammingLanguage.CSharp, new string[] {
                        "employerIncentivesApi"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An employer is prevented from applying for a new apprenticeship payment after the" +
            " phase 2 period has closed")]
        [NUnit.Framework.CategoryAttribute("applyApplicationShutterPage")]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/application-complete/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/select-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/select-apprentices/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/confirm-apprentices/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/declaration/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/no-eligible-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/problem-with-service", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/join-organisation", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/validate-terms-signed", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/eligible-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/taken-on-new-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/need-bank-details", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/add-bank-details", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/complete/application-sa" +
            "ved", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/cancel/MLP7DD/cancel-application", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/MLP7DD", null)]
        public virtual void AnEmployerIsPreventedFromApplyingForANewApprenticeshipPaymentAfterThePhase2PeriodHasClosed(string url, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "applyApplicationShutterPage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("url", url);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An employer is prevented from applying for a new apprenticeship payment after the" +
                    " phase 2 period has closed", null, tagsOfScenario, argumentsOfScenario);
#line 8
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given("the application is configured to prevent applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.When(string.Format("the employer access the {0} page", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("the employer is shown the application shutter page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An employer is prevented from submitting a new apprenticeship application")]
        [NUnit.Framework.CategoryAttribute("applyApplicationShutterPage")]
        public virtual void AnEmployerIsPreventedFromSubmittingANewApprenticeshipApplication()
        {
            string[] tagsOfScenario = new string[] {
                    "applyApplicationShutterPage"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An employer is prevented from submitting a new apprenticeship application", null, tagsOfScenario, argumentsOfScenario);
#line 34
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 35
 testRunner.Given("the application is configured to prevent applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 36
 testRunner.When("the employer submits an application for the new apprenticeship payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 37
 testRunner.Then("the employer is shown the application shutter page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An employer is allowed to use some areas of the site after the phase 2 period has" +
            " closed")]
        [NUnit.Framework.CategoryAttribute("applyApplicationShutterPage")]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/cannot-apply", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/choose-organisation", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/change-bank-details", null)]
        [NUnit.Framework.TestCaseAttribute("/error/403", null)]
        [NUnit.Framework.TestCaseAttribute("/error/404", null)]
        [NUnit.Framework.TestCaseAttribute("/error/500", null)]
        [NUnit.Framework.TestCaseAttribute("/", null)]
        [NUnit.Framework.TestCaseAttribute("/login", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/MLP7DD/hire-new-apprentice-payment", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/payment-applications", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/MLP7DD/payment-applications", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/MLP7DD/no-applications", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/choose-organisation", null)]
        public virtual void AnEmployerIsAllowedToUseSomeAreasOfTheSiteAfterThePhase2PeriodHasClosed(string url, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "applyApplicationShutterPage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("url", url);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An employer is allowed to use some areas of the site after the phase 2 period has" +
                    " closed", null, tagsOfScenario, argumentsOfScenario);
#line 40
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 41
 testRunner.Given("the application is configured to prevent applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 42
 testRunner.When(string.Format("the employer access the {0} page", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 43
 testRunner.Then("the employer is not shown the application shutter page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An employer is allowed to use all areas of the site before the phase 2 period has" +
            " closed")]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/application-complete/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/select-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/select-apprentices/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/confirm-apprentices/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/declaration/fd0f5a2d-b45b-4a73-8750-ddd167b270c3", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/no-eligible-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/cannot-apply", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/cannot-apply", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/problem-with-service", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/join-organisation", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/choose-organisation", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/validate-terms-signed", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/eligible-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/apply/MLP7DD/taken-on-new-apprentices", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/need-bank-details", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/add-bank-details", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/complete/application-sa" +
            "ved", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/bank-details/fd0f5a2d-b45b-4a73-8750-ddd167b270c3/change-bank-details", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/cancel/MLP7DD/cancel-application", null)]
        [NUnit.Framework.TestCaseAttribute("/error/403", null)]
        [NUnit.Framework.TestCaseAttribute("/error/404", null)]
        [NUnit.Framework.TestCaseAttribute("/error/500", null)]
        [NUnit.Framework.TestCaseAttribute("/", null)]
        [NUnit.Framework.TestCaseAttribute("/login", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/MLP7DD", null)]
        [NUnit.Framework.TestCaseAttribute("/signout", null)]
        [NUnit.Framework.TestCaseAttribute("/signoutcleanup", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/MLP7DD/hire-new-apprentice-payment", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/payment-applications", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/MLP7DD/payment-applications", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/MLP7DD/no-applications", null)]
        [NUnit.Framework.TestCaseAttribute("/VBKBLD/payments/choose-organisation", null)]
        public virtual void AnEmployerIsAllowedToUseAllAreasOfTheSiteBeforeThePhase2PeriodHasClosed(string url, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("url", url);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An employer is allowed to use all areas of the site before the phase 2 period has" +
                    " closed", null, tagsOfScenario, argumentsOfScenario);
#line 62
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 63
 testRunner.Given("the application is configured to allow applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
 testRunner.When(string.Format("the employer access the {0} page", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.Then("the employer is not shown the application shutter page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
